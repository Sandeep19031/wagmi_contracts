{
	"id": "f4d418f5c6087b1472299d8fa0265bca",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/MinterRole.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0-or-later\r\npragma solidity ^0.8.0;\r\n\r\nimport \"./Roles.sol\";\r\n\r\ncontract MinterRole {\r\n    using Roles for Roles.Role;\r\n\r\n    event MinterAdded(address indexed account);\r\n    event MinterRemoved(address indexed account);\r\n\r\n    Roles.Role private minters;\r\n\r\n    constructor() {\r\n        _addMinter(msg.sender);\r\n    }\r\n\r\n    modifier onlyMinter(address sender) {\r\n        require(isMinter(sender));\r\n        _;\r\n    }\r\n\r\n    function isMinter(address account) public view returns (bool) {\r\n        return minters.has(account);\r\n    }\r\n\r\n    function addMinter(address account) public onlyMinter(msg.sender) {\r\n        _addMinter(account);\r\n    }\r\n\r\n    function renounceMinter() public {\r\n        _removeMinter(msg.sender);\r\n    }\r\n\r\n    function _addMinter(address account) internal {\r\n        minters.add(account);\r\n        emit MinterAdded(account);\r\n    }\r\n\r\n    function _removeMinter(address account) internal {\r\n        minters.remove(account);\r\n        emit MinterRemoved(account);\r\n    }\r\n}"
			},
			"contracts/Roles.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0-or-later\r\npragma solidity ^0.8.0;\r\n\r\n/**\r\n * @title Roles\r\n * @dev Library for managing addresses assigned to a Role.\r\n */\r\nlibrary Roles {\r\n  struct Role {\r\n    mapping (address => bool) bearer;\r\n  }\r\n\r\n  /**\r\n   * @dev give an account access to this role\r\n   */\r\n  function add(Role storage role, address account) internal {\r\n    require(account != address(0));\r\n    role.bearer[account] = true;\r\n  }\r\n\r\n  /**\r\n   * @dev remove an account's access to this role\r\n   */\r\n  function remove(Role storage role, address account) internal {\r\n    require(account != address(0));\r\n    role.bearer[account] = false;\r\n  }\r\n\r\n  /**\r\n   * @dev check if an account has this role\r\n   * @return bool\r\n   */\r\n  function has(Role storage role, address account)\r\n    internal\r\n    view\r\n    returns (bool)\r\n  {\r\n    require(account != address(0));\r\n    return role.bearer[account];\r\n  }\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/MinterRole.sol": {
				"MinterRole": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "MinterAdded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "MinterRemoved",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "addMinter",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "isMinter",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceMinter",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/MinterRole.sol\":98:1034  contract MinterRole {\r... */\n  mstore(0x40, 0x80)\n    /* \"contracts/MinterRole.sol\":297:352  constructor() {\r... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"contracts/MinterRole.sol\":322:344  _addMinter(msg.sender) */\n  tag_4\n    /* \"contracts/MinterRole.sol\":333:343  msg.sender */\n  caller\n    /* \"contracts/MinterRole.sol\":322:332  _addMinter */\n  shl(0x20, tag_5)\n    /* \"contracts/MinterRole.sol\":322:344  _addMinter(msg.sender) */\n  0x20\n  shr\n  jump\t// in\ntag_4:\n    /* \"contracts/MinterRole.sol\":98:1034  contract MinterRole {\r... */\n  jump(tag_6)\n    /* \"contracts/MinterRole.sol\":773:894  function _addMinter(address account) internal {\r... */\ntag_5:\n    /* \"contracts/MinterRole.sol\":830:850  minters.add(account) */\n  tag_8\n    /* \"contracts/MinterRole.sol\":842:849  account */\n  dup2\n    /* \"contracts/MinterRole.sol\":830:837  minters */\n  0x00\n    /* \"contracts/MinterRole.sol\":830:841  minters.add */\n  or(tag_0_17, shl(0x20, tag_9))\n  swap1\n    /* \"contracts/MinterRole.sol\":830:850  minters.add(account) */\n  swap2\n  swap1\n  0x20\n  shr\n  jump\t// in\ntag_8:\n    /* \"contracts/MinterRole.sol\":878:885  account */\n  dup1\n    /* \"contracts/MinterRole.sol\":866:886  MinterAdded(account) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f6\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log2\n    /* \"contracts/MinterRole.sol\":773:894  function _addMinter(address account) internal {\r... */\n  pop\n  jump\t// out\n    /* \"contracts/Roles.sol\":303:438  function add(Role storage role, address account) internal {\r... */\ntag_9:\n    /* \"contracts/Roles.sol\":395:396  0 */\n  0x00\n    /* \"contracts/Roles.sol\":376:397  account != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/Roles.sol\":376:383  account */\n  dup2\n    /* \"contracts/Roles.sol\":376:397  account != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  eq\n  iszero\n    /* \"contracts/Roles.sol\":368:398  require(account != address(0)) */\n  tag_11\n  jumpi\n  0x00\n  dup1\n  revert\ntag_11:\n    /* \"contracts/Roles.sol\":428:432  true */\n  0x01\n    /* \"contracts/Roles.sol\":405:409  role */\n  dup3\n    /* \"contracts/Roles.sol\":405:416  role.bearer */\n  0x00\n  add\n    /* \"contracts/Roles.sol\":405:425  role.bearer[account] */\n  0x00\n    /* \"contracts/Roles.sol\":417:424  account */\n  dup4\n    /* \"contracts/Roles.sol\":405:425  role.bearer[account] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n    /* \"contracts/Roles.sol\":405:432  role.bearer[account] = true */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/Roles.sol\":303:438  function add(Role storage role, address account) internal {\r... */\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/MinterRole.sol\":98:1034  contract MinterRole {\r... */\ntag_6:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/MinterRole.sol\":98:1034  contract MinterRole {\r... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x983b2d56\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x98650275\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xaa271e1a\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/MinterRole.sol\":576:680  function addMinter(address account) public onlyMinter(msg.sender) {\r... */\n    tag_3:\n      tag_6\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_7\n      swap2\n      swap1\n      tag_8\n      jump\t// in\n    tag_7:\n      tag_9\n      jump\t// in\n    tag_6:\n      stop\n        /* \"contracts/MinterRole.sol\":688:765  function renounceMinter() public {\r... */\n    tag_4:\n      tag_10\n      tag_11\n      jump\t// in\n    tag_10:\n      stop\n        /* \"contracts/MinterRole.sol\":460:568  function isMinter(address account) public view returns (bool) {\r... */\n    tag_5:\n      tag_12\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_13\n      swap2\n      swap1\n      tag_8\n      jump\t// in\n    tag_13:\n      tag_14\n      jump\t// in\n    tag_12:\n      mload(0x40)\n      tag_15\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/MinterRole.sol\":576:680  function addMinter(address account) public onlyMinter(msg.sender) {\r... */\n    tag_9:\n        /* \"contracts/MinterRole.sol\":630:640  msg.sender */\n      caller\n        /* \"contracts/MinterRole.sol\":415:431  isMinter(sender) */\n      tag_19\n        /* \"contracts/MinterRole.sol\":424:430  sender */\n      dup2\n        /* \"contracts/MinterRole.sol\":415:423  isMinter */\n      tag_14\n        /* \"contracts/MinterRole.sol\":415:431  isMinter(sender) */\n      jump\t// in\n    tag_19:\n        /* \"contracts/MinterRole.sol\":407:432  require(isMinter(sender)) */\n      tag_20\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_20:\n        /* \"contracts/MinterRole.sol\":653:672  _addMinter(account) */\n      tag_22\n        /* \"contracts/MinterRole.sol\":664:671  account */\n      dup3\n        /* \"contracts/MinterRole.sol\":653:663  _addMinter */\n      tag_23\n        /* \"contracts/MinterRole.sol\":653:672  _addMinter(account) */\n      jump\t// in\n    tag_22:\n        /* \"contracts/MinterRole.sol\":576:680  function addMinter(address account) public onlyMinter(msg.sender) {\r... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/MinterRole.sol\":688:765  function renounceMinter() public {\r... */\n    tag_11:\n        /* \"contracts/MinterRole.sol\":732:757  _removeMinter(msg.sender) */\n      tag_25\n        /* \"contracts/MinterRole.sol\":746:756  msg.sender */\n      caller\n        /* \"contracts/MinterRole.sol\":732:745  _removeMinter */\n      tag_26\n        /* \"contracts/MinterRole.sol\":732:757  _removeMinter(msg.sender) */\n      jump\t// in\n    tag_25:\n        /* \"contracts/MinterRole.sol\":688:765  function renounceMinter() public {\r... */\n      jump\t// out\n        /* \"contracts/MinterRole.sol\":460:568  function isMinter(address account) public view returns (bool) {\r... */\n    tag_14:\n        /* \"contracts/MinterRole.sol\":516:520  bool */\n      0x00\n        /* \"contracts/MinterRole.sol\":540:560  minters.has(account) */\n      tag_28\n        /* \"contracts/MinterRole.sol\":552:559  account */\n      dup3\n        /* \"contracts/MinterRole.sol\":540:547  minters */\n      0x00\n        /* \"contracts/MinterRole.sol\":540:551  minters.has */\n      tag_29\n      swap1\n        /* \"contracts/MinterRole.sol\":540:560  minters.has(account) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_28:\n        /* \"contracts/MinterRole.sol\":533:560  return minters.has(account) */\n      swap1\n      pop\n        /* \"contracts/MinterRole.sol\":460:568  function isMinter(address account) public view returns (bool) {\r... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/Roles.sol\":303:438  function add(Role storage role, address account) internal {\r... */\n    tag_17:\n        /* \"contracts/Roles.sol\":395:396  0 */\n      0x00\n        /* \"contracts/Roles.sol\":376:397  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Roles.sol\":376:383  account */\n      dup2\n        /* \"contracts/Roles.sol\":376:397  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/Roles.sol\":368:398  require(account != address(0)) */\n      tag_31\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_31:\n        /* \"contracts/Roles.sol\":428:432  true */\n      0x01\n        /* \"contracts/Roles.sol\":405:409  role */\n      dup3\n        /* \"contracts/Roles.sol\":405:416  role.bearer */\n      0x00\n      add\n        /* \"contracts/Roles.sol\":405:425  role.bearer[account] */\n      0x00\n        /* \"contracts/Roles.sol\":417:424  account */\n      dup4\n        /* \"contracts/Roles.sol\":405:425  role.bearer[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/Roles.sol\":405:432  role.bearer[account] = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/Roles.sol\":303:438  function add(Role storage role, address account) internal {\r... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/MinterRole.sol\":773:894  function _addMinter(address account) internal {\r... */\n    tag_23:\n        /* \"contracts/MinterRole.sol\":830:850  minters.add(account) */\n      tag_33\n        /* \"contracts/MinterRole.sol\":842:849  account */\n      dup2\n        /* \"contracts/MinterRole.sol\":830:837  minters */\n      0x00\n        /* \"contracts/MinterRole.sol\":830:841  minters.add */\n      tag_17\n      swap1\n        /* \"contracts/MinterRole.sol\":830:850  minters.add(account) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_33:\n        /* \"contracts/MinterRole.sol\":878:885  account */\n      dup1\n        /* \"contracts/MinterRole.sol\":866:886  MinterAdded(account) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f6\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/MinterRole.sol\":773:894  function _addMinter(address account) internal {\r... */\n      pop\n      jump\t// out\n        /* \"contracts/MinterRole.sol\":902:1031  function _removeMinter(address account) internal {\r... */\n    tag_26:\n        /* \"contracts/MinterRole.sol\":962:985  minters.remove(account) */\n      tag_35\n        /* \"contracts/MinterRole.sol\":977:984  account */\n      dup2\n        /* \"contracts/MinterRole.sol\":962:969  minters */\n      0x00\n        /* \"contracts/MinterRole.sol\":962:976  minters.remove */\n      tag_36\n      swap1\n        /* \"contracts/MinterRole.sol\":962:985  minters.remove(account) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_35:\n        /* \"contracts/MinterRole.sol\":1015:1022  account */\n      dup1\n        /* \"contracts/MinterRole.sol\":1001:1023  MinterRemoved(account) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xe94479a9f7e1952cc78f2d6baab678adc1b772d936c6583def489e524cb66692\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/MinterRole.sol\":902:1031  function _removeMinter(address account) internal {\r... */\n      pop\n      jump\t// out\n        /* \"contracts/Roles.sol\":732:905  function has(Role storage role, address account)\r... */\n    tag_29:\n        /* \"contracts/Roles.sol\":819:823  bool */\n      0x00\n        /* \"contracts/Roles.sol\":862:863  0 */\n      dup1\n        /* \"contracts/Roles.sol\":843:864  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Roles.sol\":843:850  account */\n      dup3\n        /* \"contracts/Roles.sol\":843:864  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/Roles.sol\":835:865  require(account != address(0)) */\n      tag_38\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_38:\n        /* \"contracts/Roles.sol\":879:883  role */\n      dup3\n        /* \"contracts/Roles.sol\":879:890  role.bearer */\n      0x00\n      add\n        /* \"contracts/Roles.sol\":879:899  role.bearer[account] */\n      0x00\n        /* \"contracts/Roles.sol\":891:898  account */\n      dup4\n        /* \"contracts/Roles.sol\":879:899  role.bearer[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/Roles.sol\":872:899  return role.bearer[account] */\n      swap1\n      pop\n        /* \"contracts/Roles.sol\":732:905  function has(Role storage role, address account)\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Roles.sol\":509:648  function remove(Role storage role, address account) internal {\r... */\n    tag_36:\n        /* \"contracts/Roles.sol\":604:605  0 */\n      0x00\n        /* \"contracts/Roles.sol\":585:606  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Roles.sol\":585:592  account */\n      dup2\n        /* \"contracts/Roles.sol\":585:606  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/Roles.sol\":577:607  require(account != address(0)) */\n      tag_40\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_40:\n        /* \"contracts/Roles.sol\":637:642  false */\n      0x00\n        /* \"contracts/Roles.sol\":614:618  role */\n      dup3\n        /* \"contracts/Roles.sol\":614:625  role.bearer */\n      0x00\n      add\n        /* \"contracts/Roles.sol\":614:634  role.bearer[account] */\n      0x00\n        /* \"contracts/Roles.sol\":626:633  account */\n      dup4\n        /* \"contracts/Roles.sol\":614:634  role.bearer[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/Roles.sol\":614:642  role.bearer[account] = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/Roles.sol\":509:648  function remove(Role storage role, address account) internal {\r... */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:146   */\n    tag_42:\n        /* \"#utility.yul\":53:58   */\n      0x00\n        /* \"#utility.yul\":91:97   */\n      dup2\n        /* \"#utility.yul\":78:98   */\n      calldataload\n        /* \"#utility.yul\":69:98   */\n      swap1\n      pop\n        /* \"#utility.yul\":107:140   */\n      tag_44\n        /* \"#utility.yul\":134:139   */\n      dup2\n        /* \"#utility.yul\":107:140   */\n      tag_45\n      jump\t// in\n    tag_44:\n        /* \"#utility.yul\":7:146   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":152:481   */\n    tag_8:\n        /* \"#utility.yul\":211:217   */\n      0x00\n        /* \"#utility.yul\":260:262   */\n      0x20\n        /* \"#utility.yul\":248:257   */\n      dup3\n        /* \"#utility.yul\":239:246   */\n      dup5\n        /* \"#utility.yul\":235:258   */\n      sub\n        /* \"#utility.yul\":231:263   */\n      slt\n        /* \"#utility.yul\":228:347   */\n      iszero\n      tag_47\n      jumpi\n        /* \"#utility.yul\":266:345   */\n      tag_48\n      tag_49\n      jump\t// in\n    tag_48:\n        /* \"#utility.yul\":228:347   */\n    tag_47:\n        /* \"#utility.yul\":386:387   */\n      0x00\n        /* \"#utility.yul\":411:464   */\n      tag_50\n        /* \"#utility.yul\":456:463   */\n      dup5\n        /* \"#utility.yul\":447:453   */\n      dup3\n        /* \"#utility.yul\":436:445   */\n      dup6\n        /* \"#utility.yul\":432:454   */\n      add\n        /* \"#utility.yul\":411:464   */\n      tag_42\n      jump\t// in\n    tag_50:\n        /* \"#utility.yul\":401:464   */\n      swap2\n      pop\n        /* \"#utility.yul\":357:474   */\n      pop\n        /* \"#utility.yul\":152:481   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":487:596   */\n    tag_51:\n        /* \"#utility.yul\":568:589   */\n      tag_53\n        /* \"#utility.yul\":583:588   */\n      dup2\n        /* \"#utility.yul\":568:589   */\n      tag_54\n      jump\t// in\n    tag_53:\n        /* \"#utility.yul\":563:566   */\n      dup3\n        /* \"#utility.yul\":556:590   */\n      mstore\n        /* \"#utility.yul\":487:596   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":602:812   */\n    tag_16:\n        /* \"#utility.yul\":689:693   */\n      0x00\n        /* \"#utility.yul\":727:729   */\n      0x20\n        /* \"#utility.yul\":716:725   */\n      dup3\n        /* \"#utility.yul\":712:730   */\n      add\n        /* \"#utility.yul\":704:730   */\n      swap1\n      pop\n        /* \"#utility.yul\":740:805   */\n      tag_56\n        /* \"#utility.yul\":802:803   */\n      0x00\n        /* \"#utility.yul\":791:800   */\n      dup4\n        /* \"#utility.yul\":787:804   */\n      add\n        /* \"#utility.yul\":778:784   */\n      dup5\n        /* \"#utility.yul\":740:805   */\n      tag_51\n      jump\t// in\n    tag_56:\n        /* \"#utility.yul\":602:812   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":899:995   */\n    tag_59:\n        /* \"#utility.yul\":936:943   */\n      0x00\n        /* \"#utility.yul\":965:989   */\n      tag_61\n        /* \"#utility.yul\":983:988   */\n      dup3\n        /* \"#utility.yul\":965:989   */\n      tag_62\n      jump\t// in\n    tag_61:\n        /* \"#utility.yul\":954:989   */\n      swap1\n      pop\n        /* \"#utility.yul\":899:995   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1001:1091   */\n    tag_54:\n        /* \"#utility.yul\":1035:1042   */\n      0x00\n        /* \"#utility.yul\":1078:1083   */\n      dup2\n        /* \"#utility.yul\":1071:1084   */\n      iszero\n        /* \"#utility.yul\":1064:1085   */\n      iszero\n        /* \"#utility.yul\":1053:1085   */\n      swap1\n      pop\n        /* \"#utility.yul\":1001:1091   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1097:1223   */\n    tag_62:\n        /* \"#utility.yul\":1134:1141   */\n      0x00\n        /* \"#utility.yul\":1174:1216   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1167:1172   */\n      dup3\n        /* \"#utility.yul\":1163:1217   */\n      and\n        /* \"#utility.yul\":1152:1217   */\n      swap1\n      pop\n        /* \"#utility.yul\":1097:1223   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1352:1469   */\n    tag_49:\n        /* \"#utility.yul\":1461:1462   */\n      0x00\n        /* \"#utility.yul\":1458:1459   */\n      dup1\n        /* \"#utility.yul\":1451:1463   */\n      revert\n        /* \"#utility.yul\":1475:1597   */\n    tag_45:\n        /* \"#utility.yul\":1548:1572   */\n      tag_69\n        /* \"#utility.yul\":1566:1571   */\n      dup2\n        /* \"#utility.yul\":1548:1572   */\n      tag_59\n      jump\t// in\n    tag_69:\n        /* \"#utility.yul\":1541:1546   */\n      dup2\n        /* \"#utility.yul\":1538:1573   */\n      eq\n        /* \"#utility.yul\":1528:1591   */\n      tag_70\n      jumpi\n        /* \"#utility.yul\":1587:1588   */\n      0x00\n        /* \"#utility.yul\":1584:1585   */\n      dup1\n        /* \"#utility.yul\":1577:1589   */\n      revert\n        /* \"#utility.yul\":1528:1591   */\n    tag_70:\n        /* \"#utility.yul\":1475:1597   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122073a3e33e0c94cce479c5e8606f2d6a602f9c8f0ddeb59aca3c15915d72136b0a64736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_26": {
									"entryPoint": null,
									"id": 26,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_addMinter_90": {
									"entryPoint": 37,
									"id": 90,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@add_142": {
									"entryPoint": 131,
									"id": 142,
									"parameterSlots": 2,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506100203361002560201b60201c565b61011b565b61003d81600061008360201b6100e41790919060201c565b8073ffffffffffffffffffffffffffffffffffffffff167f6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f660405160405180910390a250565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156100bd57600080fd5b60018260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b6104568061012a6000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c8063983b2d56146100465780639865027514610062578063aa271e1a1461006c575b600080fd5b610060600480360381019061005b919061036f565b61009c565b005b61006a6100bc565b005b6100866004803603810190610081919061036f565b6100c7565b60405161009391906103ab565b60405180910390f35b336100a6816100c7565b6100af57600080fd5b6100b88261017c565b5050565b6100c5336101d6565b565b60006100dd82600061023090919063ffffffff16565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561011e57600080fd5b60018260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b6101908160006100e490919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167f6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f660405160405180910390a250565b6101ea8160006102c290919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167fe94479a9f7e1952cc78f2d6baab678adc1b772d936c6583def489e524cb6669260405160405180910390a250565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561026b57600080fd5b8260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156102fc57600080fd5b60008260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b60008135905061036981610409565b92915050565b60006020828403121561038557610384610404565b5b60006103938482850161035a565b91505092915050565b6103a5816103d8565b82525050565b60006020820190506103c0600083018461039c565b92915050565b60006103d1826103e4565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600080fd5b610412816103c6565b811461041d57600080fd5b5056fea264697066735822122073a3e33e0c94cce479c5e8606f2d6a602f9c8f0ddeb59aca3c15915d72136b0a64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x20 CALLER PUSH2 0x25 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x11B JUMP JUMPDEST PUSH2 0x3D DUP2 PUSH1 0x0 PUSH2 0x83 PUSH1 0x20 SHL PUSH2 0xE4 OR SWAP1 SWAP2 SWAP1 PUSH1 0x20 SHR JUMP JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x6AE172837EA30B801FBFCDD4108AA1D5BF8FF775444FD70256B44E6BF3DFC3F6 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xBD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 DUP3 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH2 0x456 DUP1 PUSH2 0x12A PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x983B2D56 EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x98650275 EQ PUSH2 0x62 JUMPI DUP1 PUSH4 0xAA271E1A EQ PUSH2 0x6C JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x60 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5B SWAP2 SWAP1 PUSH2 0x36F JUMP JUMPDEST PUSH2 0x9C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x6A PUSH2 0xBC JUMP JUMPDEST STOP JUMPDEST PUSH2 0x86 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x81 SWAP2 SWAP1 PUSH2 0x36F JUMP JUMPDEST PUSH2 0xC7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x93 SWAP2 SWAP1 PUSH2 0x3AB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLER PUSH2 0xA6 DUP2 PUSH2 0xC7 JUMP JUMPDEST PUSH2 0xAF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB8 DUP3 PUSH2 0x17C JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0xC5 CALLER PUSH2 0x1D6 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDD DUP3 PUSH1 0x0 PUSH2 0x230 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x11E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 DUP3 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH2 0x190 DUP2 PUSH1 0x0 PUSH2 0xE4 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x6AE172837EA30B801FBFCDD4108AA1D5BF8FF775444FD70256B44E6BF3DFC3F6 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH2 0x1EA DUP2 PUSH1 0x0 PUSH2 0x2C2 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xE94479A9F7E1952CC78F2D6BAAB678ADC1B772D936C6583DEF489E524CB66692 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x26B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x2FC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x369 DUP2 PUSH2 0x409 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x385 JUMPI PUSH2 0x384 PUSH2 0x404 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x393 DUP5 DUP3 DUP6 ADD PUSH2 0x35A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x3A5 DUP2 PUSH2 0x3D8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3C0 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x39C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3D1 DUP3 PUSH2 0x3E4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x412 DUP2 PUSH2 0x3C6 JUMP JUMPDEST DUP2 EQ PUSH2 0x41D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH20 0xA3E33E0C94CCE479C5E8606F2D6A602F9C8F0DDE 0xB5 SWAP11 0xCA EXTCODECOPY ISZERO SWAP2 0x5D PUSH19 0x136B0A64736F6C634300080700330000000000 ",
							"sourceMap": "98:936:0:-:0;;;297:55;;;;;;;;;;322:22;333:10;322;;;:22;;:::i;:::-;98:936;;773:121;830:20;842:7;830;:11;;;;;;:20;;;;:::i;:::-;878:7;866:20;;;;;;;;;;;;773:121;:::o;303:135:1:-;395:1;376:21;;:7;:21;;;;368:30;;;;;;428:4;405;:11;;:20;417:7;405:20;;;;;;;;;;;;;;;;:27;;;;;;;;;;;;;;;;;;303:135;;:::o;98:936:0:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_addMinter_90": {
									"entryPoint": 380,
									"id": 90,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_removeMinter_106": {
									"entryPoint": 470,
									"id": 106,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@addMinter_65": {
									"entryPoint": 156,
									"id": 65,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@add_142": {
									"entryPoint": 228,
									"id": 142,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@has_195": {
									"entryPoint": 560,
									"id": 195,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@isMinter_51": {
									"entryPoint": 199,
									"id": 51,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@remove_169": {
									"entryPoint": 706,
									"id": 169,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@renounceMinter_74": {
									"entryPoint": 188,
									"id": 74,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 858,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 879,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 924,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 939,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 966,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 984,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 996,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1028,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 1033,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1600:2",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "59:87:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "69:29:2",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "91:6:2"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "78:12:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "78:20:2"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "69:5:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "134:5:2"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "107:26:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "107:33:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "107:33:2"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "37:6:2",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "45:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:2",
														"type": ""
													}
												],
												"src": "7:139:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "218:263:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "264:83:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "266:77:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "266:79:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "266:79:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "239:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "248:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "235:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "235:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "260:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "231:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "231:32:2"
															},
															"nodeType": "YulIf",
															"src": "228:119:2"
														},
														{
															"nodeType": "YulBlock",
															"src": "357:117:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "372:15:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "386:1:2",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "376:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "401:63:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "436:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "447:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "432:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "432:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "456:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "411:20:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "411:53:2"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "401:6:2"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "188:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "199:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "211:6:2",
														"type": ""
													}
												],
												"src": "152:329:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "546:50:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "563:3:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "583:5:2"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "568:14:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "568:21:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "556:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "556:34:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "556:34:2"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "534:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "541:3:2",
														"type": ""
													}
												],
												"src": "487:109:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "694:118:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "704:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "716:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "727:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "712:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "712:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "704:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "778:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "791:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "802:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "787:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "787:17:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "740:37:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "740:65:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "740:65:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "666:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "678:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "689:4:2",
														"type": ""
													}
												],
												"src": "602:210:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "858:35:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "868:19:2",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "884:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "878:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "878:9:2"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "868:6:2"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "851:6:2",
														"type": ""
													}
												],
												"src": "818:75:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "944:51:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "954:35:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "983:5:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "965:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "965:24:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "954:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "926:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "936:7:2",
														"type": ""
													}
												],
												"src": "899:96:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1043:48:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1053:32:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1078:5:2"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1071:6:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1071:13:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1064:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1064:21:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1053:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1025:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1035:7:2",
														"type": ""
													}
												],
												"src": "1001:90:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1142:81:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1152:65:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1167:5:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1174:42:2",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1163:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1163:54:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1152:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1124:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1134:7:2",
														"type": ""
													}
												],
												"src": "1097:126:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1318:28:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1335:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1338:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1328:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1328:12:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1328:12:2"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "1229:117:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1441:28:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1458:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1461:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1451:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1451:12:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1451:12:2"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "1352:117:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1518:79:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1575:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1584:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1587:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1577:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1577:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1577:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1541:5:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1566:5:2"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "1548:17:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1548:24:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1538:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1538:35:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1531:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1531:43:2"
															},
															"nodeType": "YulIf",
															"src": "1528:63:2"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1511:5:2",
														"type": ""
													}
												],
												"src": "1475:122:2"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 2,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100415760003560e01c8063983b2d56146100465780639865027514610062578063aa271e1a1461006c575b600080fd5b610060600480360381019061005b919061036f565b61009c565b005b61006a6100bc565b005b6100866004803603810190610081919061036f565b6100c7565b60405161009391906103ab565b60405180910390f35b336100a6816100c7565b6100af57600080fd5b6100b88261017c565b5050565b6100c5336101d6565b565b60006100dd82600061023090919063ffffffff16565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561011e57600080fd5b60018260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b6101908160006100e490919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167f6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f660405160405180910390a250565b6101ea8160006102c290919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167fe94479a9f7e1952cc78f2d6baab678adc1b772d936c6583def489e524cb6669260405160405180910390a250565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561026b57600080fd5b8260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156102fc57600080fd5b60008260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b60008135905061036981610409565b92915050565b60006020828403121561038557610384610404565b5b60006103938482850161035a565b91505092915050565b6103a5816103d8565b82525050565b60006020820190506103c0600083018461039c565b92915050565b60006103d1826103e4565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600080fd5b610412816103c6565b811461041d57600080fd5b5056fea264697066735822122073a3e33e0c94cce479c5e8606f2d6a602f9c8f0ddeb59aca3c15915d72136b0a64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x983B2D56 EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x98650275 EQ PUSH2 0x62 JUMPI DUP1 PUSH4 0xAA271E1A EQ PUSH2 0x6C JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x60 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5B SWAP2 SWAP1 PUSH2 0x36F JUMP JUMPDEST PUSH2 0x9C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x6A PUSH2 0xBC JUMP JUMPDEST STOP JUMPDEST PUSH2 0x86 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x81 SWAP2 SWAP1 PUSH2 0x36F JUMP JUMPDEST PUSH2 0xC7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x93 SWAP2 SWAP1 PUSH2 0x3AB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLER PUSH2 0xA6 DUP2 PUSH2 0xC7 JUMP JUMPDEST PUSH2 0xAF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB8 DUP3 PUSH2 0x17C JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0xC5 CALLER PUSH2 0x1D6 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDD DUP3 PUSH1 0x0 PUSH2 0x230 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x11E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 DUP3 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH2 0x190 DUP2 PUSH1 0x0 PUSH2 0xE4 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x6AE172837EA30B801FBFCDD4108AA1D5BF8FF775444FD70256B44E6BF3DFC3F6 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH2 0x1EA DUP2 PUSH1 0x0 PUSH2 0x2C2 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xE94479A9F7E1952CC78F2D6BAAB678ADC1B772D936C6583DEF489E524CB66692 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x26B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x2FC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x369 DUP2 PUSH2 0x409 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x385 JUMPI PUSH2 0x384 PUSH2 0x404 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x393 DUP5 DUP3 DUP6 ADD PUSH2 0x35A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x3A5 DUP2 PUSH2 0x3D8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3C0 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x39C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3D1 DUP3 PUSH2 0x3E4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x412 DUP2 PUSH2 0x3C6 JUMP JUMPDEST DUP2 EQ PUSH2 0x41D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH20 0xA3E33E0C94CCE479C5E8606F2D6A602F9C8F0DDE 0xB5 SWAP11 0xCA EXTCODECOPY ISZERO SWAP2 0x5D PUSH19 0x136B0A64736F6C634300080700330000000000 ",
							"sourceMap": "98:936:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;576:104;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;688:77;;;:::i;:::-;;460:108;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;576:104;630:10;415:16;424:6;415:8;:16::i;:::-;407:25;;;;;;653:19:::1;664:7;653:10;:19::i;:::-;576:104:::0;;:::o;688:77::-;732:25;746:10;732:13;:25::i;:::-;688:77::o;460:108::-;516:4;540:20;552:7;540;:11;;:20;;;;:::i;:::-;533:27;;460:108;;;:::o;303:135:1:-;395:1;376:21;;:7;:21;;;;368:30;;;;;;428:4;405;:11;;:20;417:7;405:20;;;;;;;;;;;;;;;;:27;;;;;;;;;;;;;;;;;;303:135;;:::o;773:121:0:-;830:20;842:7;830;:11;;:20;;;;:::i;:::-;878:7;866:20;;;;;;;;;;;;773:121;:::o;902:129::-;962:23;977:7;962;:14;;:23;;;;:::i;:::-;1015:7;1001:22;;;;;;;;;;;;902:129;:::o;732:173:1:-;819:4;862:1;843:21;;:7;:21;;;;835:30;;;;;;879:4;:11;;:20;891:7;879:20;;;;;;;;;;;;;;;;;;;;;;;;;872:27;;732:173;;;;:::o;509:139::-;604:1;585:21;;:7;:21;;;;577:30;;;;;;637:5;614:4;:11;;:20;626:7;614:20;;;;;;;;;;;;;;;;:28;;;;;;;;;;;;;;;;;;509:139;;:::o;7::2:-;53:5;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;7:139;;;;:::o;152:329::-;211:6;260:2;248:9;239:7;235:23;231:32;228:119;;;266:79;;:::i;:::-;228:119;386:1;411:53;456:7;447:6;436:9;432:22;411:53;:::i;:::-;401:63;;357:117;152:329;;;;:::o;487:109::-;568:21;583:5;568:21;:::i;:::-;563:3;556:34;487:109;;:::o;602:210::-;689:4;727:2;716:9;712:18;704:26;;740:65;802:1;791:9;787:17;778:6;740:65;:::i;:::-;602:210;;;;:::o;899:96::-;936:7;965:24;983:5;965:24;:::i;:::-;954:35;;899:96;;;:::o;1001:90::-;1035:7;1078:5;1071:13;1064:21;1053:32;;1001:90;;;:::o;1097:126::-;1134:7;1174:42;1167:5;1163:54;1152:65;;1097:126;;;:::o;1352:117::-;1461:1;1458;1451:12;1475:122;1548:24;1566:5;1548:24;:::i;:::-;1541:5;1538:35;1528:63;;1587:1;1584;1577:12;1528:63;1475:122;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "222000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"addMinter(address)": "infinite",
								"isMinter(address)": "infinite",
								"renounceMinter()": "infinite"
							},
							"internal": {
								"_addMinter(address)": "infinite",
								"_removeMinter(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 98,
									"end": 1034,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 98,
									"end": 1034,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 98,
									"end": 1034,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 297,
									"end": 352,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 297,
									"end": 352,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 297,
									"end": 352,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 297,
									"end": 352,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 297,
									"end": 352,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 297,
									"end": 352,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 297,
									"end": 352,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 297,
									"end": 352,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 297,
									"end": 352,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 297,
									"end": 352,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 297,
									"end": 352,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 322,
									"end": 344,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 333,
									"end": 343,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 322,
									"end": 332,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 322,
									"end": 332,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 322,
									"end": 332,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 322,
									"end": 344,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 322,
									"end": 344,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 322,
									"end": 344,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 322,
									"end": 344,
									"name": "tag",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 322,
									"end": 344,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 98,
									"end": 1034,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 98,
									"end": 1034,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 773,
									"end": 894,
									"name": "tag",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 773,
									"end": 894,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 830,
									"end": 850,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 842,
									"end": 849,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 830,
									"end": 837,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 830,
									"end": 841,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 830,
									"end": 841,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 830,
									"end": 841,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 830,
									"end": 841,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "18446744073709551633"
								},
								{
									"begin": 830,
									"end": 841,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 830,
									"end": 841,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 830,
									"end": 850,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 830,
									"end": 850,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 830,
									"end": 850,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 830,
									"end": 850,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 830,
									"end": 850,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 830,
									"end": 850,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 830,
									"end": 850,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 878,
									"end": 885,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 866,
									"end": 886,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 866,
									"end": 886,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 866,
									"end": 886,
									"name": "PUSH",
									"source": 0,
									"value": "6AE172837EA30B801FBFCDD4108AA1D5BF8FF775444FD70256B44E6BF3DFC3F6"
								},
								{
									"begin": 866,
									"end": 886,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 866,
									"end": 886,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 866,
									"end": 886,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 866,
									"end": 886,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 866,
									"end": 886,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 866,
									"end": 886,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 866,
									"end": 886,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 866,
									"end": 886,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 866,
									"end": 886,
									"name": "LOG2",
									"source": 0
								},
								{
									"begin": 773,
									"end": 894,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 773,
									"end": 894,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 303,
									"end": 438,
									"name": "tag",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 303,
									"end": 438,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 395,
									"end": 396,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 376,
									"end": 397,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 376,
									"end": 397,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 376,
									"end": 383,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 376,
									"end": 397,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 376,
									"end": 397,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 376,
									"end": 397,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 376,
									"end": 397,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 368,
									"end": 398,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 368,
									"end": 398,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 368,
									"end": 398,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 368,
									"end": 398,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 368,
									"end": 398,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 368,
									"end": 398,
									"name": "tag",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 368,
									"end": 398,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 428,
									"end": 432,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 405,
									"end": 409,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 405,
									"end": 416,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 405,
									"end": 416,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 405,
									"end": 425,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 417,
									"end": 424,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 405,
									"end": 425,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 405,
									"end": 425,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 405,
									"end": 425,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 405,
									"end": 425,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 405,
									"end": 425,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 405,
									"end": 425,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 405,
									"end": 425,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 405,
									"end": 425,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 405,
									"end": 425,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 405,
									"end": 425,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 405,
									"end": 425,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 405,
									"end": 425,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 405,
									"end": 425,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 405,
									"end": 425,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 405,
									"end": 425,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 405,
									"end": 425,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 405,
									"end": 432,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 405,
									"end": 432,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 405,
									"end": 432,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 405,
									"end": 432,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 405,
									"end": 432,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 405,
									"end": 432,
									"name": "PUSH",
									"source": 1,
									"value": "FF"
								},
								{
									"begin": 405,
									"end": 432,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 405,
									"end": 432,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 405,
									"end": 432,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 405,
									"end": 432,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 405,
									"end": 432,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 405,
									"end": 432,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 405,
									"end": 432,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 405,
									"end": 432,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 405,
									"end": 432,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 405,
									"end": 432,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 405,
									"end": 432,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 405,
									"end": 432,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 303,
									"end": 438,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 303,
									"end": 438,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 303,
									"end": 438,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 98,
									"end": 1034,
									"name": "tag",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 98,
									"end": 1034,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 98,
									"end": 1034,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 98,
									"end": 1034,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 98,
									"end": 1034,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 98,
									"end": 1034,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 98,
									"end": 1034,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 98,
									"end": 1034,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 98,
									"end": 1034,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122073a3e33e0c94cce479c5e8606f2d6a602f9c8f0ddeb59aca3c15915d72136b0a64736f6c63430008070033",
									".code": [
										{
											"begin": 98,
											"end": 1034,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 98,
											"end": 1034,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 98,
											"end": 1034,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 98,
											"end": 1034,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 98,
											"end": 1034,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 98,
											"end": 1034,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 98,
											"end": 1034,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 98,
											"end": 1034,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 98,
											"end": 1034,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 98,
											"end": 1034,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 98,
											"end": 1034,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 98,
											"end": 1034,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 98,
											"end": 1034,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 98,
											"end": 1034,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 98,
											"end": 1034,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 98,
											"end": 1034,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 98,
											"end": 1034,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 98,
											"end": 1034,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 98,
											"end": 1034,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 98,
											"end": 1034,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 98,
											"end": 1034,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 98,
											"end": 1034,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 98,
											"end": 1034,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 98,
											"end": 1034,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 98,
											"end": 1034,
											"name": "PUSH",
											"source": 0,
											"value": "983B2D56"
										},
										{
											"begin": 98,
											"end": 1034,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 98,
											"end": 1034,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 98,
											"end": 1034,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 98,
											"end": 1034,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 98,
											"end": 1034,
											"name": "PUSH",
											"source": 0,
											"value": "98650275"
										},
										{
											"begin": 98,
											"end": 1034,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 98,
											"end": 1034,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 98,
											"end": 1034,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 98,
											"end": 1034,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 98,
											"end": 1034,
											"name": "PUSH",
											"source": 0,
											"value": "AA271E1A"
										},
										{
											"begin": 98,
											"end": 1034,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 98,
											"end": 1034,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 98,
											"end": 1034,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 98,
											"end": 1034,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 98,
											"end": 1034,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 98,
											"end": 1034,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 98,
											"end": 1034,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 98,
											"end": 1034,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 576,
											"end": 680,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 576,
											"end": 680,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 576,
											"end": 680,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 576,
											"end": 680,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 576,
											"end": 680,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 576,
											"end": 680,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 576,
											"end": 680,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 576,
											"end": 680,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 576,
											"end": 680,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 576,
											"end": 680,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 576,
											"end": 680,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 576,
											"end": 680,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 576,
											"end": 680,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 576,
											"end": 680,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 576,
											"end": 680,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 576,
											"end": 680,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 576,
											"end": 680,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 576,
											"end": 680,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 576,
											"end": 680,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 576,
											"end": 680,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 576,
											"end": 680,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 576,
											"end": 680,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 688,
											"end": 765,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 688,
											"end": 765,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 688,
											"end": 765,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 688,
											"end": 765,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 688,
											"end": 765,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 688,
											"end": 765,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 688,
											"end": 765,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 688,
											"end": 765,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 460,
											"end": 568,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 460,
											"end": 568,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 460,
											"end": 568,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 460,
											"end": 568,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 460,
											"end": 568,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 460,
											"end": 568,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 460,
											"end": 568,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 460,
											"end": 568,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 460,
											"end": 568,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 460,
											"end": 568,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 460,
											"end": 568,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 460,
											"end": 568,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 460,
											"end": 568,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 460,
											"end": 568,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 460,
											"end": 568,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 460,
											"end": 568,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 460,
											"end": 568,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 460,
											"end": 568,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 460,
											"end": 568,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 460,
											"end": 568,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 460,
											"end": 568,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 460,
											"end": 568,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 460,
											"end": 568,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 460,
											"end": 568,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 460,
											"end": 568,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 460,
											"end": 568,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 460,
											"end": 568,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 460,
											"end": 568,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 460,
											"end": 568,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 460,
											"end": 568,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 460,
											"end": 568,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 460,
											"end": 568,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 460,
											"end": 568,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 460,
											"end": 568,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 460,
											"end": 568,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 460,
											"end": 568,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 460,
											"end": 568,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 576,
											"end": 680,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 576,
											"end": 680,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 630,
											"end": 640,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 415,
											"end": 431,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 424,
											"end": 430,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 415,
											"end": 423,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 415,
											"end": 431,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 415,
											"end": 431,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 415,
											"end": 431,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 407,
											"end": 432,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 407,
											"end": 432,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 407,
											"end": 432,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 407,
											"end": 432,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 407,
											"end": 432,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 407,
											"end": 432,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 407,
											"end": 432,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 653,
											"end": 672,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 664,
											"end": 671,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 653,
											"end": 663,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 653,
											"end": 672,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 653,
											"end": 672,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 653,
											"end": 672,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 576,
											"end": 680,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 576,
											"end": 680,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 576,
											"end": 680,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 688,
											"end": 765,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 688,
											"end": 765,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 732,
											"end": 757,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 746,
											"end": 756,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 732,
											"end": 745,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 732,
											"end": 757,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 732,
											"end": 757,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 732,
											"end": 757,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 688,
											"end": 765,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 460,
											"end": 568,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 460,
											"end": 568,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 516,
											"end": 520,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 540,
											"end": 560,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 552,
											"end": 559,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 540,
											"end": 547,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 540,
											"end": 551,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 540,
											"end": 551,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 540,
											"end": 560,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 540,
											"end": 560,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 540,
											"end": 560,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 540,
											"end": 560,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 540,
											"end": 560,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 540,
											"end": 560,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 540,
											"end": 560,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 533,
											"end": 560,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 533,
											"end": 560,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 460,
											"end": 568,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 460,
											"end": 568,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 460,
											"end": 568,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 460,
											"end": 568,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 303,
											"end": 438,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 303,
											"end": 438,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 395,
											"end": 396,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 376,
											"end": 397,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 376,
											"end": 397,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 376,
											"end": 383,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 376,
											"end": 397,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 376,
											"end": 397,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 376,
											"end": 397,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 376,
											"end": 397,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 368,
											"end": 398,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 368,
											"end": 398,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 368,
											"end": 398,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 368,
											"end": 398,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 368,
											"end": 398,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 368,
											"end": 398,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 368,
											"end": 398,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 428,
											"end": 432,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 405,
											"end": 409,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 405,
											"end": 416,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 405,
											"end": 416,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 405,
											"end": 425,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 417,
											"end": 424,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 405,
											"end": 425,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 405,
											"end": 425,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 405,
											"end": 425,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 405,
											"end": 425,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 405,
											"end": 425,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 405,
											"end": 425,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 405,
											"end": 425,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 405,
											"end": 425,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 405,
											"end": 425,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 405,
											"end": 425,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 405,
											"end": 425,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 405,
											"end": 425,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 405,
											"end": 425,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 405,
											"end": 425,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 405,
											"end": 425,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 405,
											"end": 425,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 405,
											"end": 432,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 405,
											"end": 432,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 405,
											"end": 432,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 405,
											"end": 432,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 405,
											"end": 432,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 405,
											"end": 432,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 405,
											"end": 432,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 405,
											"end": 432,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 405,
											"end": 432,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 405,
											"end": 432,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 405,
											"end": 432,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 405,
											"end": 432,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 405,
											"end": 432,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 405,
											"end": 432,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 405,
											"end": 432,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 405,
											"end": 432,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 405,
											"end": 432,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 405,
											"end": 432,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 303,
											"end": 438,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 303,
											"end": 438,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 303,
											"end": 438,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 773,
											"end": 894,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 773,
											"end": 894,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 830,
											"end": 850,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 842,
											"end": 849,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 830,
											"end": 837,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 830,
											"end": 841,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 830,
											"end": 841,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 830,
											"end": 850,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 830,
											"end": 850,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 830,
											"end": 850,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 830,
											"end": 850,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 830,
											"end": 850,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 830,
											"end": 850,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 830,
											"end": 850,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 878,
											"end": 885,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 866,
											"end": 886,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 866,
											"end": 886,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 866,
											"end": 886,
											"name": "PUSH",
											"source": 0,
											"value": "6AE172837EA30B801FBFCDD4108AA1D5BF8FF775444FD70256B44E6BF3DFC3F6"
										},
										{
											"begin": 866,
											"end": 886,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 866,
											"end": 886,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 866,
											"end": 886,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 866,
											"end": 886,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 866,
											"end": 886,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 866,
											"end": 886,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 866,
											"end": 886,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 866,
											"end": 886,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 866,
											"end": 886,
											"name": "LOG2",
											"source": 0
										},
										{
											"begin": 773,
											"end": 894,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 773,
											"end": 894,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 902,
											"end": 1031,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 902,
											"end": 1031,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 962,
											"end": 985,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 977,
											"end": 984,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 962,
											"end": 969,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 962,
											"end": 976,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 962,
											"end": 976,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 962,
											"end": 985,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 962,
											"end": 985,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 962,
											"end": 985,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 962,
											"end": 985,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 962,
											"end": 985,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 962,
											"end": 985,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 962,
											"end": 985,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1015,
											"end": 1022,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1001,
											"end": 1023,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1001,
											"end": 1023,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1001,
											"end": 1023,
											"name": "PUSH",
											"source": 0,
											"value": "E94479A9F7E1952CC78F2D6BAAB678ADC1B772D936C6583DEF489E524CB66692"
										},
										{
											"begin": 1001,
											"end": 1023,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1001,
											"end": 1023,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1001,
											"end": 1023,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1001,
											"end": 1023,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1001,
											"end": 1023,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1001,
											"end": 1023,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1001,
											"end": 1023,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1001,
											"end": 1023,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1001,
											"end": 1023,
											"name": "LOG2",
											"source": 0
										},
										{
											"begin": 902,
											"end": 1031,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 902,
											"end": 1031,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 732,
											"end": 905,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 732,
											"end": 905,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 819,
											"end": 823,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 862,
											"end": 863,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 843,
											"end": 864,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 843,
											"end": 864,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 843,
											"end": 850,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 843,
											"end": 864,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 843,
											"end": 864,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 843,
											"end": 864,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 843,
											"end": 864,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 835,
											"end": 865,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 835,
											"end": 865,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 835,
											"end": 865,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 835,
											"end": 865,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 835,
											"end": 865,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 835,
											"end": 865,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 835,
											"end": 865,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 879,
											"end": 883,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 879,
											"end": 890,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 879,
											"end": 890,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 879,
											"end": 899,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 891,
											"end": 898,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 879,
											"end": 899,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 879,
											"end": 899,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 879,
											"end": 899,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 879,
											"end": 899,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 879,
											"end": 899,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 879,
											"end": 899,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 879,
											"end": 899,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 879,
											"end": 899,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 879,
											"end": 899,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 879,
											"end": 899,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 879,
											"end": 899,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 879,
											"end": 899,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 879,
											"end": 899,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 879,
											"end": 899,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 879,
											"end": 899,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 879,
											"end": 899,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 879,
											"end": 899,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 879,
											"end": 899,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 879,
											"end": 899,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 879,
											"end": 899,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 879,
											"end": 899,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 879,
											"end": 899,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 879,
											"end": 899,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 879,
											"end": 899,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 879,
											"end": 899,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 872,
											"end": 899,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 872,
											"end": 899,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 732,
											"end": 905,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 732,
											"end": 905,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 732,
											"end": 905,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 732,
											"end": 905,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 732,
											"end": 905,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 509,
											"end": 648,
											"name": "tag",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 509,
											"end": 648,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 604,
											"end": 605,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 585,
											"end": 606,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 585,
											"end": 606,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 585,
											"end": 592,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 585,
											"end": 606,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 585,
											"end": 606,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 585,
											"end": 606,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 585,
											"end": 606,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 577,
											"end": 607,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 577,
											"end": 607,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 577,
											"end": 607,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 577,
											"end": 607,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 577,
											"end": 607,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 577,
											"end": 607,
											"name": "tag",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 577,
											"end": 607,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 637,
											"end": 642,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 614,
											"end": 618,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 614,
											"end": 625,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 614,
											"end": 625,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 614,
											"end": 634,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 626,
											"end": 633,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 614,
											"end": 634,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 614,
											"end": 634,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 614,
											"end": 634,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 614,
											"end": 634,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 614,
											"end": 634,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 614,
											"end": 634,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 614,
											"end": 634,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 614,
											"end": 634,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 614,
											"end": 634,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 614,
											"end": 634,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 614,
											"end": 634,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 614,
											"end": 634,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 614,
											"end": 634,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 614,
											"end": 634,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 614,
											"end": 634,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 614,
											"end": 634,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 614,
											"end": 642,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 614,
											"end": 642,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 614,
											"end": 642,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 614,
											"end": 642,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 614,
											"end": 642,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 614,
											"end": 642,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 614,
											"end": 642,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 614,
											"end": 642,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 614,
											"end": 642,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 614,
											"end": 642,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 614,
											"end": 642,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 614,
											"end": 642,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 614,
											"end": 642,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 614,
											"end": 642,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 614,
											"end": 642,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 614,
											"end": 642,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 614,
											"end": 642,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 614,
											"end": 642,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 509,
											"end": 648,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 509,
											"end": 648,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 509,
											"end": 648,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "tag",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 53,
											"end": 58,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 91,
											"end": 97,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 78,
											"end": 98,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 69,
											"end": 98,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 69,
											"end": 98,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 134,
											"end": 139,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "tag",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7,
											"end": 146,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7,
											"end": 146,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7,
											"end": 146,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7,
											"end": 146,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 152,
											"end": 481,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 152,
											"end": 481,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 211,
											"end": 217,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 260,
											"end": 262,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 248,
											"end": 257,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 239,
											"end": 246,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 235,
											"end": 258,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 231,
											"end": 263,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 228,
											"end": 347,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 228,
											"end": 347,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 228,
											"end": 347,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 266,
											"end": 345,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 266,
											"end": 345,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 266,
											"end": 345,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 266,
											"end": 345,
											"name": "tag",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 266,
											"end": 345,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 228,
											"end": 347,
											"name": "tag",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 228,
											"end": 347,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 386,
											"end": 387,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 464,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 456,
											"end": 463,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 447,
											"end": 453,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 436,
											"end": 445,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 432,
											"end": 454,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 411,
											"end": 464,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 411,
											"end": 464,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 411,
											"end": 464,
											"name": "tag",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 411,
											"end": 464,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 401,
											"end": 464,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 401,
											"end": 464,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 357,
											"end": 474,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 152,
											"end": 481,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 152,
											"end": 481,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 152,
											"end": 481,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 152,
											"end": 481,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 152,
											"end": 481,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 487,
											"end": 596,
											"name": "tag",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 487,
											"end": 596,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 568,
											"end": 589,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 583,
											"end": 588,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 568,
											"end": 589,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 568,
											"end": 589,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 568,
											"end": 589,
											"name": "tag",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 568,
											"end": 589,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 563,
											"end": 566,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 556,
											"end": 590,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 487,
											"end": 596,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 487,
											"end": 596,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 487,
											"end": 596,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 602,
											"end": 812,
											"name": "tag",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 602,
											"end": 812,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 689,
											"end": 693,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 727,
											"end": 729,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 716,
											"end": 725,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 712,
											"end": 730,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 704,
											"end": 730,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 704,
											"end": 730,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 740,
											"end": 805,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 802,
											"end": 803,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 791,
											"end": 800,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 787,
											"end": 804,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 778,
											"end": 784,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 740,
											"end": 805,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 740,
											"end": 805,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 740,
											"end": 805,
											"name": "tag",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 740,
											"end": 805,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 602,
											"end": 812,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 602,
											"end": 812,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 602,
											"end": 812,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 602,
											"end": 812,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 602,
											"end": 812,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 899,
											"end": 995,
											"name": "tag",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 899,
											"end": 995,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 936,
											"end": 943,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 965,
											"end": 989,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 983,
											"end": 988,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 965,
											"end": 989,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 965,
											"end": 989,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 965,
											"end": 989,
											"name": "tag",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 965,
											"end": 989,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 954,
											"end": 989,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 954,
											"end": 989,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 899,
											"end": 995,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 899,
											"end": 995,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 899,
											"end": 995,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 899,
											"end": 995,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1001,
											"end": 1091,
											"name": "tag",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 1001,
											"end": 1091,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1035,
											"end": 1042,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1078,
											"end": 1083,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1071,
											"end": 1084,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1064,
											"end": 1085,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1053,
											"end": 1085,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1053,
											"end": 1085,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1001,
											"end": 1091,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1001,
											"end": 1091,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1001,
											"end": 1091,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1001,
											"end": 1091,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1097,
											"end": 1223,
											"name": "tag",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 1097,
											"end": 1223,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1134,
											"end": 1141,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1174,
											"end": 1216,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1167,
											"end": 1172,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1163,
											"end": 1217,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1152,
											"end": 1217,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1152,
											"end": 1217,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1097,
											"end": 1223,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1097,
											"end": 1223,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1097,
											"end": 1223,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1097,
											"end": 1223,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1352,
											"end": 1469,
											"name": "tag",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 1352,
											"end": 1469,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1461,
											"end": 1462,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1458,
											"end": 1459,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1451,
											"end": 1463,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1475,
											"end": 1597,
											"name": "tag",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 1475,
											"end": 1597,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1548,
											"end": 1572,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 1566,
											"end": 1571,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1548,
											"end": 1572,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 1548,
											"end": 1572,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1548,
											"end": 1572,
											"name": "tag",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 1548,
											"end": 1572,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1541,
											"end": 1546,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1538,
											"end": 1573,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1528,
											"end": 1591,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 1528,
											"end": 1591,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1587,
											"end": 1588,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1584,
											"end": 1585,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1577,
											"end": 1589,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1528,
											"end": 1591,
											"name": "tag",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 1528,
											"end": 1591,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1475,
											"end": 1597,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1475,
											"end": 1597,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"addMinter(address)": "983b2d56",
							"isMinter(address)": "aa271e1a",
							"renounceMinter()": "98650275"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"MinterAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"MinterRemoved\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"addMinter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isMinter\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceMinter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/MinterRole.sol\":\"MinterRole\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/MinterRole.sol\":{\"keccak256\":\"0x0b3c38a44cfdcd04936691556c9e6eab53a2ff63374dccda36caf160d52b6b73\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://1d468f32c7d1b35455a101bae8dfc17c74143dd2d6243e7bbbdae23e2d6f2516\",\"dweb:/ipfs/QmUf2Sxiqz96RJ4DEgNiKWrBamaoEyfhoH77A7hb3rXsw4\"]},\"contracts/Roles.sol\":{\"keccak256\":\"0xacb14328e74061aaf20c9187f36b6878b3193680206cc94f73c2fd424e8b5a76\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://bd807e86d9d8fa48312f2cb395edbd8184cb0449f99871cf2342df217d0df986\",\"dweb:/ipfs/Qmae4NGC3TZK2uPcPHjKYVGRf1VWD5jP9T34Cqp1sLypgy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 17,
								"contract": "contracts/MinterRole.sol:MinterRole",
								"label": "minters",
								"offset": 0,
								"slot": "0",
								"type": "t_struct(Role)115_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_struct(Role)115_storage": {
								"encoding": "inplace",
								"label": "struct Roles.Role",
								"members": [
									{
										"astId": 114,
										"contract": "contracts/MinterRole.sol:MinterRole",
										"label": "bearer",
										"offset": 0,
										"slot": "0",
										"type": "t_mapping(t_address,t_bool)"
									}
								],
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/Roles.sol": {
				"Roles": {
					"abi": [],
					"devdoc": {
						"details": "Library for managing addresses assigned to a Role.",
						"kind": "dev",
						"methods": {},
						"title": "Roles",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Roles.sol\":160:908  library Roles {\r... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Roles.sol\":160:908  library Roles {\r... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122078cc980a53db8e645d19e830185b461d3a80df777f97dd699f49c612385d75db64736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122078cc980a53db8e645d19e830185b461d3a80df777f97dd699f49c612385d75db64736f6c63430008070033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH25 0xCC980A53DB8E645D19E830185B461D3A80DF777F97DD699F49 0xC6 SLT CODESIZE 0x5D PUSH22 0xDB64736F6C6343000807003300000000000000000000 ",
							"sourceMap": "160:748:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122078cc980a53db8e645d19e830185b461d3a80df777f97dd699f49c612385d75db64736f6c63430008070033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH25 0xCC980A53DB8E645D19E830185B461D3A80DF777F97DD699F49 0xC6 SLT CODESIZE 0x5D PUSH22 0xDB64736F6C6343000807003300000000000000000000 ",
							"sourceMap": "160:748:1:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"add(struct Roles.Role storage pointer,address)": "infinite",
								"has(struct Roles.Role storage pointer,address)": "infinite",
								"remove(struct Roles.Role storage pointer,address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 160,
									"end": 908,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 160,
									"end": 908,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 160,
									"end": 908,
									"name": "PUSH",
									"source": 1,
									"value": "B"
								},
								{
									"begin": 160,
									"end": 908,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 160,
									"end": 908,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 160,
									"end": 908,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 160,
									"end": 908,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 160,
									"end": 908,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 160,
									"end": 908,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 160,
									"end": 908,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 160,
									"end": 908,
									"name": "BYTE",
									"source": 1
								},
								{
									"begin": 160,
									"end": 908,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 160,
									"end": 908,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 160,
									"end": 908,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 160,
									"end": 908,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 160,
									"end": 908,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 160,
									"end": 908,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 160,
									"end": 908,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 160,
									"end": 908,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 160,
									"end": 908,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 160,
									"end": 908,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 160,
									"end": 908,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 160,
									"end": 908,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 160,
									"end": 908,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 160,
									"end": 908,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 160,
									"end": 908,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 160,
									"end": 908,
									"name": "ADDRESS",
									"source": 1
								},
								{
									"begin": 160,
									"end": 908,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 160,
									"end": 908,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 160,
									"end": 908,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 160,
									"end": 908,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 160,
									"end": 908,
									"name": "MSTORE8",
									"source": 1
								},
								{
									"begin": 160,
									"end": 908,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 160,
									"end": 908,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 160,
									"end": 908,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122078cc980a53db8e645d19e830185b461d3a80df777f97dd699f49c612385d75db64736f6c63430008070033",
									".code": [
										{
											"begin": 160,
											"end": 908,
											"name": "PUSHDEPLOYADDRESS",
											"source": 1
										},
										{
											"begin": 160,
											"end": 908,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 160,
											"end": 908,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 160,
											"end": 908,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 160,
											"end": 908,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 160,
											"end": 908,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 160,
											"end": 908,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 160,
											"end": 908,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 160,
											"end": 908,
											"name": "REVERT",
											"source": 1
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for managing addresses assigned to a Role.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Roles\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Roles.sol\":\"Roles\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Roles.sol\":{\"keccak256\":\"0xacb14328e74061aaf20c9187f36b6878b3193680206cc94f73c2fd424e8b5a76\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://bd807e86d9d8fa48312f2cb395edbd8184cb0449f99871cf2342df217d0df986\",\"dweb:/ipfs/Qmae4NGC3TZK2uPcPHjKYVGRf1VWD5jP9T34Cqp1sLypgy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/MinterRole.sol": {
				"ast": {
					"absolutePath": "contracts/MinterRole.sol",
					"exportedSymbols": {
						"MinterRole": [
							107
						],
						"Roles": [
							196
						]
					},
					"id": 108,
					"license": "GPL-3.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "46:23:0"
						},
						{
							"absolutePath": "contracts/Roles.sol",
							"file": "./Roles.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 108,
							"sourceUnit": 197,
							"src": "73:21:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 107,
							"linearizedBaseContracts": [
								107
							],
							"name": "MinterRole",
							"nameLocation": "107:10:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 6,
									"libraryName": {
										"id": 3,
										"name": "Roles",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 196,
										"src": "131:5:0"
									},
									"nodeType": "UsingForDirective",
									"src": "125:27:0",
									"typeName": {
										"id": 5,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 4,
											"name": "Roles.Role",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 115,
											"src": "141:10:0"
										},
										"referencedDeclaration": 115,
										"src": "141:10:0",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_Role_$115_storage_ptr",
											"typeString": "struct Roles.Role"
										}
									}
								},
								{
									"anonymous": false,
									"id": 10,
									"name": "MinterAdded",
									"nameLocation": "166:11:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 9,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 8,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "194:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 10,
												"src": "178:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 7,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "178:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "177:25:0"
									},
									"src": "160:43:0"
								},
								{
									"anonymous": false,
									"id": 14,
									"name": "MinterRemoved",
									"nameLocation": "215:13:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 13,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 12,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "245:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 14,
												"src": "229:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 11,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "229:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "228:25:0"
									},
									"src": "209:45:0"
								},
								{
									"constant": false,
									"id": 17,
									"mutability": "mutable",
									"name": "minters",
									"nameLocation": "281:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 107,
									"src": "262:26:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_struct$_Role_$115_storage",
										"typeString": "struct Roles.Role"
									},
									"typeName": {
										"id": 16,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 15,
											"name": "Roles.Role",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 115,
											"src": "262:10:0"
										},
										"referencedDeclaration": 115,
										"src": "262:10:0",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_Role_$115_storage_ptr",
											"typeString": "struct Roles.Role"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 25,
										"nodeType": "Block",
										"src": "311:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 21,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "333:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 22,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "333:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 20,
														"name": "_addMinter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 90,
														"src": "322:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 23,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "322:22:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 24,
												"nodeType": "ExpressionStatement",
												"src": "322:22:0"
											}
										]
									},
									"id": 26,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 18,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "308:2:0"
									},
									"returnParameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "311:0:0"
									},
									"scope": 107,
									"src": "297:55:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 37,
										"nodeType": "Block",
										"src": "396:56:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 32,
																	"name": "sender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 28,
																	"src": "424:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 31,
																"name": "isMinter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 51,
																"src": "415:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 33,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "415:16:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 30,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "407:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 34,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "407:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 35,
												"nodeType": "ExpressionStatement",
												"src": "407:25:0"
											},
											{
												"id": 36,
												"nodeType": "PlaceholderStatement",
												"src": "443:1:0"
											}
										]
									},
									"id": 38,
									"name": "onlyMinter",
									"nameLocation": "369:10:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 28,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "388:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 38,
												"src": "380:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 27,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "380:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "379:16:0"
									},
									"src": "360:92:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 50,
										"nodeType": "Block",
										"src": "522:46:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 47,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 40,
															"src": "552:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 45,
															"name": "minters",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 17,
															"src": "540:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Role_$115_storage",
																"typeString": "struct Roles.Role storage ref"
															}
														},
														"id": 46,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "has",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 195,
														"src": "540:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Role_$115_storage_ptr_$_t_address_$returns$_t_bool_$bound_to$_t_struct$_Role_$115_storage_ptr_$",
															"typeString": "function (struct Roles.Role storage pointer,address) view returns (bool)"
														}
													},
													"id": 48,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "540:20:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 44,
												"id": 49,
												"nodeType": "Return",
												"src": "533:27:0"
											}
										]
									},
									"functionSelector": "aa271e1a",
									"id": 51,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isMinter",
									"nameLocation": "469:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 41,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 40,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "486:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 51,
												"src": "478:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 39,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "478:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "477:17:0"
									},
									"returnParameters": {
										"id": 44,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 43,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 51,
												"src": "516:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 42,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "516:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "515:6:0"
									},
									"scope": 107,
									"src": "460:108:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 64,
										"nodeType": "Block",
										"src": "642:38:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 61,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 53,
															"src": "664:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 60,
														"name": "_addMinter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 90,
														"src": "653:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 62,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "653:19:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 63,
												"nodeType": "ExpressionStatement",
												"src": "653:19:0"
											}
										]
									},
									"functionSelector": "983b2d56",
									"id": 65,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"expression": {
														"id": 56,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "630:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 57,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "630:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 58,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 55,
												"name": "onlyMinter",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 38,
												"src": "619:10:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "619:22:0"
										}
									],
									"name": "addMinter",
									"nameLocation": "585:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 54,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 53,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "603:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 65,
												"src": "595:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 52,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "595:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "594:17:0"
									},
									"returnParameters": {
										"id": 59,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "642:0:0"
									},
									"scope": 107,
									"src": "576:104:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 73,
										"nodeType": "Block",
										"src": "721:44:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 69,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "746:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 70,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "746:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 68,
														"name": "_removeMinter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 106,
														"src": "732:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 71,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "732:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 72,
												"nodeType": "ExpressionStatement",
												"src": "732:25:0"
											}
										]
									},
									"functionSelector": "98650275",
									"id": 74,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "renounceMinter",
									"nameLocation": "697:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 66,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "711:2:0"
									},
									"returnParameters": {
										"id": 67,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "721:0:0"
									},
									"scope": 107,
									"src": "688:77:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 89,
										"nodeType": "Block",
										"src": "819:75:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 82,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 76,
															"src": "842:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 79,
															"name": "minters",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 17,
															"src": "830:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Role_$115_storage",
																"typeString": "struct Roles.Role storage ref"
															}
														},
														"id": 81,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "add",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 142,
														"src": "830:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Role_$115_storage_ptr_$_t_address_$returns$__$bound_to$_t_struct$_Role_$115_storage_ptr_$",
															"typeString": "function (struct Roles.Role storage pointer,address)"
														}
													},
													"id": 83,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "830:20:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 84,
												"nodeType": "ExpressionStatement",
												"src": "830:20:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 86,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 76,
															"src": "878:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 85,
														"name": "MinterAdded",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 10,
														"src": "866:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 87,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "866:20:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 88,
												"nodeType": "EmitStatement",
												"src": "861:25:0"
											}
										]
									},
									"id": 90,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_addMinter",
									"nameLocation": "782:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 77,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 76,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "801:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 90,
												"src": "793:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 75,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "793:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:17:0"
									},
									"returnParameters": {
										"id": 78,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "819:0:0"
									},
									"scope": 107,
									"src": "773:121:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 105,
										"nodeType": "Block",
										"src": "951:80:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 98,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 92,
															"src": "977:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 95,
															"name": "minters",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 17,
															"src": "962:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Role_$115_storage",
																"typeString": "struct Roles.Role storage ref"
															}
														},
														"id": 97,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "remove",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 169,
														"src": "962:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Role_$115_storage_ptr_$_t_address_$returns$__$bound_to$_t_struct$_Role_$115_storage_ptr_$",
															"typeString": "function (struct Roles.Role storage pointer,address)"
														}
													},
													"id": 99,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "962:23:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 100,
												"nodeType": "ExpressionStatement",
												"src": "962:23:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 102,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 92,
															"src": "1015:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 101,
														"name": "MinterRemoved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 14,
														"src": "1001:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 103,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1001:22:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 104,
												"nodeType": "EmitStatement",
												"src": "996:27:0"
											}
										]
									},
									"id": 106,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_removeMinter",
									"nameLocation": "911:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 93,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 92,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "933:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 106,
												"src": "925:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 91,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "925:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "924:17:0"
									},
									"returnParameters": {
										"id": 94,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "951:0:0"
									},
									"scope": 107,
									"src": "902:129:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 108,
							"src": "98:936:0",
							"usedErrors": []
						}
					],
					"src": "46:988:0"
				},
				"id": 0
			},
			"contracts/Roles.sol": {
				"ast": {
					"absolutePath": "contracts/Roles.sol",
					"exportedSymbols": {
						"Roles": [
							196
						]
					},
					"id": 197,
					"license": "GPL-3.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 109,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "46:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 110,
								"nodeType": "StructuredDocumentation",
								"src": "73:85:1",
								"text": " @title Roles\n @dev Library for managing addresses assigned to a Role."
							},
							"fullyImplemented": true,
							"id": 196,
							"linearizedBaseContracts": [
								196
							],
							"name": "Roles",
							"nameLocation": "168:5:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Roles.Role",
									"id": 115,
									"members": [
										{
											"constant": false,
											"id": 114,
											"mutability": "mutable",
											"name": "bearer",
											"nameLocation": "224:6:1",
											"nodeType": "VariableDeclaration",
											"scope": 115,
											"src": "198:32:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"typeName": {
												"id": 113,
												"keyType": {
													"id": 111,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "207:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "Mapping",
												"src": "198:25:1",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
													"typeString": "mapping(address => bool)"
												},
												"valueType": {
													"id": 112,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "218:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Role",
									"nameLocation": "186:4:1",
									"nodeType": "StructDefinition",
									"scope": 196,
									"src": "179:57:1",
									"visibility": "public"
								},
								{
									"body": {
										"id": 141,
										"nodeType": "Block",
										"src": "361:77:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 130,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 125,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 121,
																"src": "376:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 128,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "395:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 127,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "387:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 126,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "387:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 129,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "387:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "376:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 124,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "368:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 131,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "368:30:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 132,
												"nodeType": "ExpressionStatement",
												"src": "368:30:1"
											},
											{
												"expression": {
													"id": 139,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"expression": {
																"id": 133,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 119,
																"src": "405:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Role_$115_storage_ptr",
																	"typeString": "struct Roles.Role storage pointer"
																}
															},
															"id": 136,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "bearer",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 114,
															"src": "405:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 137,
														"indexExpression": {
															"id": 135,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 121,
															"src": "417:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "405:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 138,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "428:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "405:27:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 140,
												"nodeType": "ExpressionStatement",
												"src": "405:27:1"
											}
										]
									},
									"documentation": {
										"id": 116,
										"nodeType": "StructuredDocumentation",
										"src": "242:57:1",
										"text": " @dev give an account access to this role"
									},
									"id": 142,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "312:3:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 122,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 119,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "329:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 142,
												"src": "316:17:1",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Role_$115_storage_ptr",
													"typeString": "struct Roles.Role"
												},
												"typeName": {
													"id": 118,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 117,
														"name": "Role",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 115,
														"src": "316:4:1"
													},
													"referencedDeclaration": 115,
													"src": "316:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Role_$115_storage_ptr",
														"typeString": "struct Roles.Role"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 121,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "343:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 142,
												"src": "335:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 120,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "335:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "315:36:1"
									},
									"returnParameters": {
										"id": 123,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "361:0:1"
									},
									"scope": 196,
									"src": "303:135:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 168,
										"nodeType": "Block",
										"src": "570:78:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 157,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 152,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 148,
																"src": "585:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 155,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "604:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 154,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "596:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 153,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "596:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 156,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "596:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "585:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 151,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "577:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 158,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "577:30:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 159,
												"nodeType": "ExpressionStatement",
												"src": "577:30:1"
											},
											{
												"expression": {
													"id": 166,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"expression": {
																"id": 160,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 146,
																"src": "614:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Role_$115_storage_ptr",
																	"typeString": "struct Roles.Role storage pointer"
																}
															},
															"id": 163,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "bearer",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 114,
															"src": "614:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 164,
														"indexExpression": {
															"id": 162,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 148,
															"src": "626:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "614:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 165,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "637:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "614:28:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 167,
												"nodeType": "ExpressionStatement",
												"src": "614:28:1"
											}
										]
									},
									"documentation": {
										"id": 143,
										"nodeType": "StructuredDocumentation",
										"src": "444:61:1",
										"text": " @dev remove an account's access to this role"
									},
									"id": 169,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "remove",
									"nameLocation": "518:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 149,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 146,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "538:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "525:17:1",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Role_$115_storage_ptr",
													"typeString": "struct Roles.Role"
												},
												"typeName": {
													"id": 145,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 144,
														"name": "Role",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 115,
														"src": "525:4:1"
													},
													"referencedDeclaration": 115,
													"src": "525:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Role_$115_storage_ptr",
														"typeString": "struct Roles.Role"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 148,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "552:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "544:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 147,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "544:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "524:36:1"
									},
									"returnParameters": {
										"id": 150,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "570:0:1"
									},
									"scope": 196,
									"src": "509:139:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 194,
										"nodeType": "Block",
										"src": "828:77:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 186,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 181,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 175,
																"src": "843:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 184,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "862:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 183,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "854:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 182,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "854:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 185,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "854:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "843:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 180,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "835:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 187,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "835:30:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 188,
												"nodeType": "ExpressionStatement",
												"src": "835:30:1"
											},
											{
												"expression": {
													"baseExpression": {
														"expression": {
															"id": 189,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 173,
															"src": "879:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Role_$115_storage_ptr",
																"typeString": "struct Roles.Role storage pointer"
															}
														},
														"id": 190,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "bearer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 114,
														"src": "879:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 192,
													"indexExpression": {
														"id": 191,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 175,
														"src": "891:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "879:20:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 179,
												"id": 193,
												"nodeType": "Return",
												"src": "872:27:1"
											}
										]
									},
									"documentation": {
										"id": 170,
										"nodeType": "StructuredDocumentation",
										"src": "654:74:1",
										"text": " @dev check if an account has this role\n @return bool"
									},
									"id": 195,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "has",
									"nameLocation": "741:3:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 176,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 173,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "758:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 195,
												"src": "745:17:1",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Role_$115_storage_ptr",
													"typeString": "struct Roles.Role"
												},
												"typeName": {
													"id": 172,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 171,
														"name": "Role",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 115,
														"src": "745:4:1"
													},
													"referencedDeclaration": 115,
													"src": "745:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Role_$115_storage_ptr",
														"typeString": "struct Roles.Role"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 175,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "772:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 195,
												"src": "764:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 174,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "764:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "744:36:1"
									},
									"returnParameters": {
										"id": 179,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 178,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 195,
												"src": "819:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 177,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "819:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "818:6:1"
									},
									"scope": 196,
									"src": "732:173:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 197,
							"src": "160:748:1",
							"usedErrors": []
						}
					],
					"src": "46:862:1"
				},
				"id": 1
			}
		}
	}
}